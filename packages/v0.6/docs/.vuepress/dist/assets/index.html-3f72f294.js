import{_ as s,E as o,Z as c,$ as d,a0 as e,a3 as i,a1 as n,a2 as t,a4 as r}from"./framework-64cb0dab.js";const u={},h=r('<h1 id="plugin" tabindex="-1"><a class="header-anchor" href="#plugin" aria-hidden="true">#</a> Plugin</h1><p><em>Plugin</em> is an extension which can extend beyond existing functionalities and features. In Crawlab, the <em>Plugin Framework</em> is in place for users to customize their web crawler management platforms.</p><h2 id="why-plugin" tabindex="-1"><a class="header-anchor" href="#why-plugin" aria-hidden="true">#</a> Why Plugin</h2><p>Why don&#39;t we just hack around the source code in Crawlab when customization is needed? The reason is the concern for <strong>Maintainability</strong>. When you change some code of core modules in Crawlab, you might risk your project&#39;s maintainability because there will be upgrades in the future, which would very likely break your current customization.</p><p>A well-designed plugin is less likely to be tightly coupled with Crawlab, so that updates in Crawlab will not significantly affect the plugin. Plugins are pluggable and easy to be installed or uninstalled.</p><h2 id="plugin-framework" tabindex="-1"><a class="header-anchor" href="#plugin-framework" aria-hidden="true">#</a> Plugin Framework</h2><p><em>Plugin Framework</em> is embedded in Crawlab which manages official and third-party plugins. Crawlab users can develop plugins based on Crawlab Plugin Framework (CPF).</p><h2 id="official-plugins" tabindex="-1"><a class="header-anchor" href="#official-plugins" aria-hidden="true">#</a> Official Plugins</h2>',8),p={href:"https://github.com/crawlab-team",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/orgs/crawlab-team/repositories",target:"_blank",rel:"noopener noreferrer"},f=e("code",null,"plugin-",-1),b=e("thead",null,[e("tr",null,[e("th",null,"Name"),e("th",null,"Description"),e("th",null,"仓库链接")])],-1),m=e("td",null,"Sending alerts and notifications such as emails and mobile push notifications",-1),w={href:"https://github.com/crawlab-team/plugin-notification",target:"_blank",rel:"noopener noreferrer"},y=e("td",null,"Installing and managing dependencies and running environment",-1),_={href:"https://github.com/crawlab-team/plugin-dependency",target:"_blank",rel:"noopener noreferrer"},k=e("td",null,"Providing advanced web crawler features such as framework support (e.g. Scrapy, etc.)",-1),C={href:"https://github.com/crawlab-team/plugin-spider-assistant",target:"_blank",rel:"noopener noreferrer"},x=r('<h2 id="install-plugin" tabindex="-1"><a class="header-anchor" href="#install-plugin" aria-hidden="true">#</a> Install Plugin</h2><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>After a plugin is installed, you should refresh page in your web browser in order for plugin UI components to display.</p></div><p>There are several ways of installing plugins in Crawlab.</p><h3 id="install-official-plugins" tabindex="-1"><a class="header-anchor" href="#install-official-plugins" aria-hidden="true">#</a> Install Official Plugins</h3><p>You can install <a href="#official-plugins">official plugins</a> by only input the plugin name in <code>Install Plugin</code> dialog.</p><ol><li>Navigate to <code>Plugins</code>.</li><li>Choose <code>Public</code>.</li><li>Click <code>Install</code> button on plugins you would like to install.</li></ol><h3 id="install-by-git" tabindex="-1"><a class="header-anchor" href="#install-by-git" aria-hidden="true">#</a> Install by Git</h3><p>If you know the git url of a Crawlab plugin, you can install it through git url.</p><ol><li>Navigate to <code>Plugins</code>.</li><li>Choose <code>Type</code> as <code>Git</code>.</li><li>Enter the url of the plugin in the field <code>Install URL</code>.</li><li>Click <code>Confirm</code>.</li></ol><h3 id="install-by-local" tabindex="-1"><a class="header-anchor" href="#install-by-local" aria-hidden="true">#</a> Install by Local</h3><div class="hint-container warning"><p class="hint-container-title">Note</p><p>This method is recommended only when you are developing Crawlab with source code.</p></div><ol><li>Navigate to <code>Plugins</code>.</li><li>Choose <code>Type</code> as <code>Local</code>.</li><li>Enter local path of the plugin in the field <code>Install Path</code>.</li><li>Click <code>Confirm</code>.</li></ol><h3 id="installation-source" tabindex="-1"><a class="header-anchor" href="#installation-source" aria-hidden="true">#</a> Installation Source</h3><div class="hint-container warning"><p class="hint-container-title">Note</p><p><em>Installation Source</em> is only for official plugins.</p></div><p>The default installation source of official plugins is <code>GitHub</code>. But GitHub is not always the best <code>Source</code> to access. For example, if you are in Mainland China, accessing GitHub can sometimes be slow; then you can choose <code>Gitee</code> as <code>Source</code> of official plugins, which will largely speed up plugin installation.</p><h2 id="uninstall-plugin" tabindex="-1"><a class="header-anchor" href="#uninstall-plugin" aria-hidden="true">#</a> Uninstall Plugin</h2><p>You can uninstall a plugin by clicking <code>Delete</code> button on the right in <code>Plugins</code> page.</p><h2 id="start-stop" tabindex="-1"><a class="header-anchor" href="#start-stop" aria-hidden="true">#</a> Start/Stop</h2><p>You can start or stop a plugin by clicking <code>Start</code> or <code>Stop</code> button on the right in <code>Plugins</code> page.</p>',19);function P(v,I){const a=o("ExternalLinkIcon"),l=o("RouterLink");return c(),d("div",null,[h,e("p",null,[i("There are some public official plugins maintained by "),e("a",p,[i("Crawlab Team"),n(a)]),i(". The GitHub repos of official Crawlab plugins are normally located in "),e("a",g,[i("Crawlab Team's repositories"),n(a)]),i(", each of which has a prefix "),f,i(".")]),e("table",null,[b,e("tbody",null,[e("tr",null,[e("td",null,[n(l,{to:"/en/guide/plugin/plugin-notification.html"},{default:t(()=>[i("plugin-notification")]),_:1})]),m,e("td",null,[e("a",w,[i("Link"),n(a)])])]),e("tr",null,[e("td",null,[n(l,{to:"/en/guide/plugin/plugin-dependency.html"},{default:t(()=>[i("plugin-dependency")]),_:1})]),y,e("td",null,[e("a",_,[i("Link"),n(a)])])]),e("tr",null,[e("td",null,[n(l,{to:"/en/guide/plugin/plugin-spider-assistant.html"},{default:t(()=>[i("plugin-spider-assistant")]),_:1})]),k,e("td",null,[e("a",C,[i("Link"),n(a)])])])])]),x])}const S=s(u,[["render",P],["__file","index.html.vue"]]);export{S as default};
